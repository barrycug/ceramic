<!doctype html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Cover</title>
    <link rel="stylesheet" href="leaflet/leaflet.css">
    <style>
      
      #map {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
      }
      
    </style>
  </head>
  <body>
  
    <div id="map"></div>
    
    <script src="/leaflet/leaflet.js"></script>
    <script src="/render.js"></script>
    <script>
      
      var map = new L.Map("map", {
        center: new L.LatLng(<%= @lat %>, <%= @lon %>),
        zoom: <%= @zoom %>
      });
      
      
      // Mapnik underlay
      
      var mapnik = new L.TileLayer("http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png");
      
      map.addLayer(mapnik);
      
      
      // Some simple canvas tiles
      
      var canvases = {};
      
      function tileIndex(z, x, y) {
        
        return z + "/" + x + "/" + y;
        
      }
      
      function loadTile(canvas, z, x, y) {
        
        // draw "loading" overlay
        
        var context = canvas.getContext("2d");
        
        context.fillStyle = "rgba(255, 255, 255, 0.5)";
        context.fillRect(0, 0, canvas.width, canvas.height);
        
        // load a script tag
        
        var path = tileIndex(z, x, y);
        
        canvases[path] = canvas;
        
        var script = document.createElement("script");
        script.src = "/" + path;
        
        document.body.appendChild(script);
        
      }
      
      // Tile data was loaded. Draw the tile and set up an
      // event listener on the canvas to dump the tile's
      // data on alt-click.
      
      function tileData(data, z, x, y) {
        
        if (typeof data === "undefined")
          return;
        
        var path = tileIndex(z, x, y);
        var canvas = canvases[path];
        
        if (canvas) {
          
          renderTile(canvases[path], data);
          
          canvas.addEventListener("mousedown", function(e) {
          
            if (e.altKey)
              console.log(data, z, x, y);
          
          });
          
        }
        
      }
      
      var canvasTiles = new L.TileLayer.Canvas();

      canvasTiles.drawTile = function(canvas, tilePoint, zoom) {
        
        loadTile(canvas, zoom, tilePoint.x, tilePoint.y);
        
      }
      
      map.addLayer(canvasTiles);
      
    </script>
    
  </body>
</html>
