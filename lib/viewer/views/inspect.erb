<!doctype html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Inspect <%= params[:z] %>/<%= params[:x] %>/<%= params[:y] %></title>
    <style>
      
    </style>
  </head>
  <body>
    
    <article>
      <canvas id="debug" width="576" height="576"></canvas>
      <canvas id="kothic" width="512" height="512"></canvas>
    </article>
    
    <article>
      <h1>Tile stats</h1>
    
      <ul>
        <li>Fetch time: <%= "%.2f" % @fetch_time %> s</li>
        <li>File size: <%= "%.1f" % (@file_size / 1000) %> kB, <%= "%.1f" % (@compressed_file_size / 1000) %> kB compressed</li>
      </ul>
    </article>
    
    <script src="/debug_render.js"></script>
    <script src="/kothic.js"></script>
    <script src="/osmosnimki.js"></script>
    <script>
    
      MapCSS.preloadSpriteImage("osmosnimki-maps", "/osmosnimki.png");
      
      MapCSS.onImagesLoad = function() {
    
        var data = <%= @tile %>;
        var zoom = <%= params[:z] %>;
      
        var canvas, context;
      
        // draw with debug renderer
      
        canvas = document.getElementById("debug");
        context = canvas.getContext("2d");
      
        DebugRender.renderTile(canvas, data, 32);
        
        // draw inset
        
        context.beginPath();
        
        context.strokeStyle = "rgba(0, 0, 0, 0.2)";
        context.strokeRect(32 - 0.5, 32 - 0.5, canvas.width - 64, canvas.height - 64);
        
      
        // draw grid
      
        var i;
      
        context.beginPath();
      
        for (i = 4; i < canvas.width; i += 4) {
          context.moveTo(i - 0.5, 0);
          context.lineTo(i - 0.5, canvas.height);
          context.moveTo(0, i - 0.5);
          context.lineTo(canvas.width, i - 0.5);
        }
      
        context.strokeStyle = "rgba(0, 0, 0, 0.05)";
        context.stroke();
      
        // draw with kothic
      
        var kothic = new Kothic({
          buffered: false,
          styles: MapCSS.availableStyles,
          locales: ['be', 'ru', 'en']
        });
      
        var kothicData = {};
      
        kothicData.granularity = data.scale;
    
        kothicData.features = data.features.map(function(feature) {
          if (feature.type === "osm") {
            feature.type = feature.geometry.type;
            feature.coordinates = feature.geometry.coordinates;
            feature.properties = feature.tags;
          } else if (feature.type === "coastline") {
            feature.type = feature.geometry.type;
            feature.coordinates = feature.geometry.coordinates;
            feature.properties = {"natural":"coastline"};
          }
          return feature;
        });
    
        canvas = document.getElementById("kothic");
        kothic.render(canvas, kothicData, zoom, function(t) {});
        
      }
      
    </script>
    
  </body>
</html>
