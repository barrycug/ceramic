#!/usr/bin/env ruby
require "rubygems"
require "rack"

$LOAD_PATH << "./#{File.dirname(__FILE__)}/../lib"
$LOAD_PATH << "./#{File.dirname(__FILE__)}/../vendor"
require "trollop"
require "cover"
require "./#{File.dirname(__FILE__)}/../debug/debug"

options = Trollop::options do
  opt :config, "Configuration file (.rb)", :type => :string
  opt :tileset, "Tileset file (.mbtiles)", :type => :string
  opt :center, "Initial map center (lat,lon,zoom)", :type => :string
  opt :port, "Port", :type => :integer, :default => 3857
  opt :host, "Host", :type => :string, :default => "0.0.0.0"
end

if options[:tileset] == nil && options[:config] == nil
  Trollop::die "must specify either a config file with --config or a tileset file with --tileset"
end

if options[:tileset]
  
  if !File.exist?(options[:tileset])
    puts "Tileset file doesn't exist: #{options[:tileset]}"
    exit
  end
  
  database = SQLite3::Database.new(options[:tileset])
  tileset = Cover::Tileset.new(database)

  Rack::Server.start(
    :app => Cover::Debug.new(options.merge(tileset: tileset)),
    :Host => options[:host],
    :Port => options[:port]
  )
  
else
  
  require File.expand_path(options[:config])
  
  config = Object.const_get(::File.basename(options[:config], '.rb').capitalize).new
  config.setup

  Rack::Server.start(
    :app => Cover::Debug.new(options.merge(maker: config.maker)),
    :Host => options[:host],
    :Port => options[:port]
  )
  
end
