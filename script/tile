#!/usr/bin/env ruby
require "rubygems"

$LOAD_PATH << "#{File.dirname(__FILE__)}/../lib"
$LOAD_PATH << "#{File.dirname(__FILE__)}/../vendor"
require "trollop"
require "cover"

options = Trollop::options do
  opt :config, "Configuration file", :type => :string, :required => true
  opt :tile, "Tile index (z/x/y)", :type => :string, :required => true
  opt :compress, "Compress with gzip", :type => :boolean
end

if ARGV.size != 1
  Trollop::die "must specify an output path for the tile"
end

options[:output] = ARGV[0]

# get tile index

options[:tile] = begin
  Cover::Index.from_string(options[:tile])
rescue ArgumentError
  Trollop::die "invalid tile index"
end

# config file

require File.expand_path(options[:config])
  
if !Cover.config.respond_to?(:maker)
  puts "Config file must assign to Cover.config an object which responds to #maker"
  exit
end

# set up, write the tile, and teardown

Cover.config.setup

File.open(options[:output], "wb+") do |f|
  Cover.config.maker.write_tile(options[:tile], f, :compress => options[:compress] ? :gzip : false)
end

Cover.config.teardown
