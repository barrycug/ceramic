<!doctype html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Cover</title>
    <link rel="stylesheet" href="leaflet/leaflet.css">
    <style>
      
      #map {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
      }
      
    </style>
  </head>
  <body>
  
    <div id="map"></div>
    
    <script src="/leaflet/leaflet.js"></script>
    <script src="/render.js"></script>
    <script>
      
      var options = {
        zoom: <%= @zoom != nil ? @zoom : 2 %>,
        center: new L.LatLng(
          <%= @lat != nil && @lon != nil ? @lat : 0 %>,
          <%= @lat != nil && @lon != nil ? @lon : 0 %>
        )
      };
      
      (function() {
      
        var lat, lon, zoom;
      
        if ((lat = parseFloat(localStorage.getItem("lat"))) &&
            (lon = parseFloat(localStorage.getItem("lon"))) &&
            (zoom = parseInt(localStorage.getItem("zoom")))) {
          options.center = new L.LatLng(lat, lon);
          options.zoom = zoom;
        }
        
      })();
      
      var map = new L.Map("map", options);
      
      map.on("moveend", function() {
        localStorage.setItem("lat", map.getCenter().lat.toString());
        localStorage.setItem("lon", map.getCenter().lng.toString());
      });
      
      map.on("zoomend", function() {
        localStorage.setItem("zoom", map.getZoom().toString());
      });
      
      // Mapnik underlay
      
      var mapnik = new L.TileLayer("http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png");
      
      map.addLayer(mapnik);
      
      
      // Canvas tiles
      
      var loader = new Worker("loader.js");
      
      loader.onmessage = function(event) {
        
        var canvas = canvases[event.data.index];
        
        if (canvas)
          renderTile(canvas, event.data.tile);
        
      }
      
      var canvases = {};
      
      function tileIndex(z, x, y) {
        
        return z + "/" + x + "/" + y;
        
      }
      
      function loadTile(canvas, z, x, y) {
        
        // draw "loading" overlay
        
        var context = canvas.getContext("2d");
        
        context.fillStyle = "rgba(255, 255, 255, 0.5)";
        context.fillRect(0, 0, canvas.width, canvas.height);
        
        // tell the loader to load the tile
        
        var index = tileIndex(z, x, y);
        
        canvases[index] = canvas;
        loader.postMessage(index);
        
      }
      
      var canvasTiles = new L.TileLayer.Canvas();

      canvasTiles.drawTile = function(canvas, tilePoint, zoom) {
        
        loadTile(canvas, zoom, tilePoint.x, tilePoint.y);
        
      }
      
      map.addLayer(canvasTiles);
      
    </script>
    
  </body>
</html>
